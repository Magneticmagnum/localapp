"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _utils = require("../utils");

var _prefixer = require("../utils/prefixer");

var _prefixer2 = _interopRequireDefault(_prefixer);

var _reactThemeable = require("react-themeable");

var _reactThemeable2 = _interopRequireDefault(_reactThemeable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//TODO Change this to a self contained component from the current version that requires too much logic in the parent component
var ProgressBar = function (_React$Component) {
  _inherits(ProgressBar, _React$Component);

  function ProgressBar() {
    _classCallCheck(this, ProgressBar);

    return _possibleConstructorReturn(this, (ProgressBar.__proto__ || Object.getPrototypeOf(ProgressBar)).apply(this, arguments));
  }

  _createClass(ProgressBar, [{
    key: "calculateRatio",
    value: function calculateRatio(value) {
      if (value < this.props.min) {
        return 0;
      }
      if (value > this.props.max) {
        return 1;
      }
      return (value - this.props.min) / (this.props.max - this.props.min);
    }
  }, {
    key: "circularStyle",
    value: function circularStyle() {
      if (this.props.mode !== "indeterminate") {
        return {
          "strokeDasharray": 2 * Math.PI * 25 * this.calculateRatio(this.props.value) + ", 400"

        };
      }
    }
  }, {
    key: "linearStyle",
    value: function linearStyle() {
      if (this.props.mode !== "indeterminate") {
        return {
          "buffer": (0, _prefixer2.default)({
            "transform": "scaleX(" + this.calculateRatio(this.props.buffer) + ")",
            "transitionDuration": this.props.transitionDuration
          }),
          "value": (0, _prefixer2.default)({
            "transform": "scaleX(" + this.calculateRatio(this.props.value) + ")",
            "transitionDuration": this.props.transitionDuration
          })
        };
      } else {
        return {};
      }
    }
  }, {
    key: "renderCircular",
    value: function renderCircular(theme) {
      return _react2.default.createElement(
        "svg",
        theme(1, "circle"),
        _react2.default.createElement("circle", _extends({}, theme(2, "path"), {
          style: this.circularStyle(),
          cx: "30",
          cy: "30",
          r: "25"
        }))
      );
    }
  }, {
    key: "renderLinear",
    value: function renderLinear(theme) {
      var _linearStyle = this.linearStyle(),
          buffer = _linearStyle.buffer,
          value = _linearStyle.value;

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement("span", _extends({
          ref: "buffer",
          "data-ref": "buffer"
        }, theme(3, "buffer"), {
          style: buffer
        })),
        _react2.default.createElement("span", _extends({
          ref: "value",
          "data-ref": "value"
        }, theme(4, "value"), {
          style: value
        }))
      );
    }
  }, {
    key: "renderRange",
    value: function renderRange(theme) {
      var rangeStyle = (0, _prefixer2.default)({
        "transform": "translateX(" + this.calculateRatio(this.props.value.from) * 100 + "%) \n                   scaleX(" + this.calculateRatio(this.props.value.to - this.props.value.from) + ")"

      });
      return _react2.default.createElement("span", _extends({
        ref: "value",
        "data-ref": "value"
      }, theme(5, "value"), {
        style: rangeStyle
      }));
    }
  }, {
    key: "renderInner",
    value: function renderInner(theme) {
      if (this.props.type === "circular") {
        return this.renderCircular(theme);
      }
      if (isNaN(this.props.value)) {
        return this.renderRange(theme);
      }
      return this.renderLinear(theme);
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames;

      var _props = this.props,
          buffer = _props.buffer,
          type = _props.type,
          mode = _props.mode,
          value = _props.value,
          min = _props.min,
          max = _props.max,
          props = _objectWithoutProperties(_props, ["buffer", "type", "mode", "value", "min", "max"]);

      var theme = (0, _reactThemeable2.default)(props.theme);
      var classes = (0, _utils.classNames)((_classNames = {}, _defineProperty(_classNames, this.props.type, this.props.type), _defineProperty(_classNames, this.props.mode, this.props.mode), _classNames), this.props.className);

      return _react2.default.createElement(
        "div",
        _extends({
          "aria-valuenow": value,
          "aria-valuemin": min,
          "aria-valuemax": max
        }, theme.apply(undefined, [6].concat(_toConsumableArray(classes)))),
        this.renderInner(theme)
      );
    }
  }]);

  return ProgressBar;
}(_react2.default.Component);

ProgressBar.defaultProps = {
  "buffer": 0,
  "className": "",
  "max": 100,
  "min": 0,
  "transitionDuration": ".35s",
  "mode": "indeterminate",
  "multicolor": false,
  "type": "linear",
  "value": 0
};

exports.default = ProgressBar;