"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactThemeable = require("react-themeable");

var _reactThemeable2 = _interopRequireDefault(_reactThemeable);

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Switch = function (_React$Component) {
  _inherits(Switch, _React$Component);

  function Switch() {
    _classCallCheck(this, Switch);

    return _possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).apply(this, arguments));
  }

  _createClass(Switch, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          checked = _props.checked,
          disabled = _props.disabled,
          inline = _props.inline,
          name = _props.name,
          slider = _props.slider,
          small = _props.small,
          medium = _props.medium,
          large = _props.large,
          onColor = _props.onColor,
          offColor = _props.offColor,
          buttonColor = _props.buttonColor,
          other = _objectWithoutProperties(_props, ["checked", "disabled", "inline", "name", "slider", "small", "medium", "large", "onColor", "offColor", "buttonColor"]);

      var theme = (0, _reactThemeable2.default)(other.theme);

      var offClassName = (0, _utils.classNames)({
        "sliderSmall": small && !medium && !large,
        "sliderMedium": !small && !large,
        "sliderLarge": large && !medium && !small,
        disabled: disabled
      });

      var inputClassName = (0, _utils.classNames)({
        "inputSmall": small && !medium && !large,
        "inputMedium": !small && !large,
        "inputLarge": large && !medium && !small,
        disabled: disabled
      });

      var buttonClassName = (0, _utils.classNames)({
        "handleSmall": small && !medium && !large,
        "handleMedium": !small && !large,
        "handleLarge": large && !medium && !small,
        disabled: disabled
      });

      var onClassName = (0, _utils.classNames)({
        "onColorSmall": small && !medium && !large,
        "onColorMedium": !small && !large,
        "onColorLarge": large && !medium && !small
      });

      var offColorStyle = {
        "background": offColor
      };

      var onColorStyle = {
        "background": onColor
      };

      var buttonColorStyle = {
        "background": buttonColor
      };

      return _react2.default.createElement(
        "label",
        _extends({}, theme.apply(undefined, [1].concat(_toConsumableArray(offClassName))), { style: offColorStyle }),
        _react2.default.createElement("input", _extends({}, theme.apply(undefined, [2].concat(_toConsumableArray(inputClassName))), {
          style: onColorStyle,
          type: "checkbox"
        })),
        _react2.default.createElement("div", _extends({}, theme.apply(undefined, [3].concat(_toConsumableArray(buttonClassName))), { style: buttonColorStyle })),
        _react2.default.createElement("div", _extends({}, theme.apply(undefined, [4].concat(_toConsumableArray(onClassName))), { style: onColorStyle }))
      );
    }
  }]);

  return Switch;
}(_react2.default.Component);

exports.default = Switch;


Switch.defaultProps = {
  "checked": false,
  "className": "",
  "disabled": false,
  "theme": {
    "sliderMedium": "!small && !large"
  }
};