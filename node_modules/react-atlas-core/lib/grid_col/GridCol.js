"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _blacklist = require("blacklist");

var _blacklist2 = _interopRequireDefault(_blacklist);

var _constants = require("../constants");

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /** GridCol.js mostly taken and inspired from Elemental UI.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * used for Grid functionality
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2016 Thinkmill Pty Ltd
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

/**
 * Component that handles Col/Column part of a Grid system. Syntax  somewhat similar to bootstraps grid class syntax.
 */
var GridCol = function (_Component) {
  _inherits(GridCol, _Component);

  function GridCol(props) {
    _classCallCheck(this, GridCol);

    var _this = _possibleConstructorReturn(this, (GridCol.__proto__ || Object.getPrototypeOf(GridCol)).call(this, props));

    _this._handleResize = function () {
      _this.setState({
        "windowWidth": typeof window !== "undefined" ? window.innerWidth : 0
      });
    };

    _this.state = {
      "windowWidth": typeof window !== "undefined" ? window.innerWidth : 0
    };
    return _this;
  }

  _createClass(GridCol, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (typeof window !== "undefined") {
        window.addEventListener("resize", this._handleResize);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (typeof window !== "undefined") {
        window.removeEventListener("resize", this._handleResize);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          basis = _props.basis,
          gutter = _props.gutter,
          xs = _props.xs,
          sm = _props.sm,
          md = _props.md,
          lg = _props.lg;
      var windowWidth = this.state.windowWidth;


      var columnStyle = {
        "minHeight": 1,
        "paddingLeft": gutter / 2,
        "paddingRight": gutter / 2,
        "boxSizing": "border-box"
      };

      // if no width control is provided fill available space
      if (!basis && !xs && !sm && !md && !lg) {
        columnStyle.flex = "1 1 auto";
        columnStyle.msFlex = "1 1 auto";
        columnStyle.WebkitFlex = "1 1 auto";
      }

      // set widths / flex-basis
      if (basis) {
        columnStyle.flex = "1 0 " + basis;
        columnStyle.msFlex = "1 0 " + basis;
        columnStyle.WebkitFlex = "1 0 " + basis;
      } else if (windowWidth < _constants2.default.breakpoint.xs) {
        columnStyle.width = xs;
      } else if (windowWidth < _constants2.default.breakpoint.sm) {
        columnStyle.width = sm || xs;
      } else if (windowWidth < _constants2.default.breakpoint.md) {
        columnStyle.width = md || sm || xs;
      } else {
        columnStyle.width = lg || md || sm || xs;
      }

      if (!columnStyle.width) {
        columnStyle.width = "100%";
      }

      if (columnStyle.width in _constants2.default.fractions) {
        columnStyle.width = _constants2.default.fractions[columnStyle.width];
      }

      var props = (0, _blacklist2.default)(this.props, "basis", "gutter", "style", "xs", "sm", "md", "lg");

      return _react2.default.createElement("div", _extends({ style: Object.assign(columnStyle, this.props.style) }, props));
    }
  }]);

  return GridCol;
}(_react.Component);

GridCol.defaultProps = {
  "gutter": _constants2.default.width.gutter
};

exports.default = GridCol;